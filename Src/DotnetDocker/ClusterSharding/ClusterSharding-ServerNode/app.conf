 petabridge.cmd{
 	host = "127.0.0.1"

 	port = 0
 } 

 akka {
      #extensions = ["Akka.Cluster.Tools.Client.ClusterClientReceptionistExtensionProvider, Akka.Cluster.Tools"]
	  log-config-on-start = on 
      stdout-loglevel = INFO
      loglevel = INFO
	  MaserServer=actor-system
	actor {
		provider = cluster
		debug
            {
              receive = on      # log any received message
              autoreceive = on  # log automatically received messages, e.g. PoisonPill
              lifecycle = on    # log actor lifecycle changes
              event-stream = on # log subscription changes for Akka.NET event stream
              unhandled = on    # log unhandled messages sent to actors
            }
 		 
		deployment {
              
        }
  	}
            
	remote {
		dot-netty.tcp {
			hostname = "127.0.0.1"
			port = 0
 		}
	}
  	cluster {
		seed-nodes = [
 		"akka.tcp://"${akka.MaserServer}"@"${akka.remote.dot-netty.tcp.hostname}":4052"
		]  
		roles = [ClusterShardingApp]
		sharding {
           role = "ClusterShardingApp"
           #remember-entities = false
        }
		 
  	}
	
	persistence {
		journal {
			plugin = "akka.persistence.journal.sqlite"
			sqlite {
				connection-string = "Data Source=SqliteData.db"
				class = "Akka.Persistence.Sqlite.Journal.SqliteJournal, Akka.Persistence.Sqlite"
 				auto-initialize = on
			}
		}

		publish-plugin-commands = on
        snapshot-store {
        plugin = "akka.persistence.snapshot-store.sqlite"
                        sqlite {
                            class = "Akka.Persistence.Sqlite.Snapshot.SqliteSnapshotStore, Akka.Persistence.Sqlite"
                            plugin-dispatcher = "akka.actor.default-dispatcher"
                            table-name = snapshot_store
                            auto-initialize = on
                            connection-string = "Data Source=SqliteData.db"
                        }
        }
	}

}